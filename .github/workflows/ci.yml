name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.12"
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          uv-${{ runner.os }}-
          
    - name: Install dependencies
      run: uv sync --all-extras --dev
      
    - name: Create test data directory
      run: |
        mkdir -p data/processed
        mkdir -p data/raw
        mkdir -p config
        
    - name: Create minimal test configuration
      run: |
        echo "LANDUSE_MODEL=gpt-4o-mini" > config/.env
        echo "TEMPERATURE=0.1" >> config/.env
        echo "MAX_TOKENS=1000" >> config/.env
        # Create empty test database
        touch data/processed/landuse_analytics.duckdb
        
    - name: Run linting with ruff
      run: uv run ruff check . --output-format=github
      
    - name: Run type checking with mypy
      run: uv run mypy src --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # Type checking is advisory for now
      
        
    - name: Run tests with coverage
      run: |
        uv run python -m pytest tests/ \
          --ignore=tests/unit/streamlit \
          --cov=src \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=20 \
          --maxfail=10 \
          -v
          
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          coverage.xml
          pytest-report.html
          
    - name: Minimize uv cache
      run: uv cache prune