[project]
name = "rpa-landuse-analytics"
version = "0.1.0"
description = "AI-powered analytics tool for USDA Forest Service RPA Assessment land use data"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    # Core AI/LLM frameworks (pinned for stability)
    "langchain>=0.3.26,<0.4.0",
    "langchain-anthropic>=0.2.1,<0.4.0",
    "langchain-openai>=0.2.5,<0.3.0",
    "langchain-community>=0.3.5,<0.4.0",
    "langgraph>=0.2.16,<0.3.0",
    "langgraph-checkpoint>=2.0.2,<3.0.0",
    "langgraph-checkpoint-sqlite>=2.0.1,<3.0.0",
    # Data processing (pinned for compatibility)
    "pandas>=2.2.0,<3.0.0",
    "numpy>=1.26.0,<2.0.0",
    "duckdb>=1.1.0,<2.0.0",
    "pyarrow>=15.0.0,<18.0.0",
    "ijson>=3.3.0,<4.0.0",
    "openpyxl>=3.1.0,<4.0.0", # Required for Excel export in extraction.py
    # Visualization & GIS (pinned for stability)
    "matplotlib>=3.8.0,<4.0.0",
    "plotly>=5.17.0,<6.0.0",
    "geopandas>=1.0.0,<2.0.0",
    # Web UI (pinned for API compatibility)
    "streamlit>=1.46.0,<2.0.0",
    # Core utilities (explicit dependencies)
    "python-dotenv>=1.0.0,<2.0.0",
    "rich>=14.0.0,<15.0.0",
    "pydantic>=2.10.0,<3.0.0",
    "pydantic-settings>=2.6.0,<3.0.0", # Added explicitly for AppConfig
    "tenacity>=9.0.0,<10.0.0", # Added explicitly for retry decorators
    # Validation and security
    "sqlparse>=0.5.0,<1.0.0", # Added for proper SQL parsing
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.2.0",
    "pytest-xdist>=3.5.0",
    "coverage>=7.4.0",
]
docs = [
    "mkdocs>=1.6.1,<2.0.0",
    "mkdocs-material>=9.6.15,<10.0.0",
    "mkdocstrings[python]>=0.29.1,<1.0.0",
    "pymdown-extensions>=10.7.0,<11.0.0",
]
dev = [
    # Include all test and docs dependencies
    "rpa-landuse-analytics[test,docs]",
    # Development tools (pinned for stability)
    "ruff>=0.8.0,<1.0.0",
    "mypy>=1.11.0,<2.0.0",
    "safety>=3.2.0,<4.0.0",
    "pip-audit>=2.7.0,<3.0.0",
    "pre-commit>=4.0.0,<5.0.0",
    "pip-licenses>=5.0.0,<6.0.0",
]

[project.scripts]
landuse-agent = "landuse.agents.agent:main"
rpa-analytics = "landuse.agents.agent:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/landuse"]

[tool.hatch.build.targets.sdist]
include = [
    "src/landuse",
    "tests",
    "*.md",
    "pyproject.toml",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
pythonpath = ["src"]

[tool.coverage.run]
source = ["src/landuse"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "E722", # bare except (allow for now)
    "F401", # unused imports (allow for now)
    "F841", # unused variable (allow for now)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F841"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

